{"version":3,"file":"static/js/161.f27bef26.chunk.js","mappings":"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","sources":["MoviesAPI/fetchFilms.js","components/SerchBar/SerchBar.styled.jsx","components/SerchBar/SerchBar.jsx","components/Movies/MoviesList.jsx","Pages/Movies/Movies.jsx","components/Movies/Movies.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '3c2d3d1a4a9318a7ef02a0fdedccb03f';\n\nexport async function fetchPopFilms(page) {\n  const url = `/trending/movie/day?api_key=${KEY}&page=${page}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchFilmsById(movieId) {\n  const url = `/movie/${movieId}?api_key=${KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchFilmsByQuery(query) {\n  const url = `/search/movie?api_key=${KEY}&query=${query}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchFilmsCredits(movieId) {\n  const url = `/movie/${movieId}/credits?api_key=${KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchFilmsReviews(movieId) {\n  const url = `/movie/${movieId}/reviews?api_key=${KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-around;\n  border: 1px solid blue;\n  border-color: #1a7ac8;\n  border-radius: 5px;\n  width: 100px;\n  height: 40px;\n  color: #1a7ac8;\n\n  &:hover {\n    color: #fff;\n    background-color: #058bf8;\n    cursor: pointer;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  border: 1px solid #1a7ac8;\n  border-color: #1a7ac8;\n  border-radius: 5px;\n  width: 200px;\n  height: 36px;\n\n  color: #1a7ac8;\n\n  &:hover {\n    background-color: #f1f4f7;\n  }\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 40px;\n`;\n","import { StyledButton, StyledForm, StyledInput } from './SerchBar.styled';\nimport { MdSavedSearch } from 'react-icons/md';\n\nconst SerchBar = ({ onSubmit }) => {\n  return (\n    <StyledForm onSubmit={onSubmit}>\n      <StyledInput\n        type=\"text\"\n        name=\"filmInput\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search films\"\n      />\n      <StyledButton type=\"submit\">\n        <MdSavedSearch size={20} />\n        Search\n      </StyledButton>\n    </StyledForm>\n  );\n};\n\nexport default SerchBar;\n","import { useLocation } from 'react-router-dom';\nimport { StyledLink } from './Movies.styled';\n\nconst MoviesList = ({ visibleMovies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {visibleMovies.map(({ id, title, name }) => (\n        <li key={id}>\n          <StyledLink to={`${id}`} state={{ from: location }}>\n            {title || name}\n          </StyledLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import { useState, useEffect, useMemo } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchFilmsByQuery } from 'MoviesAPI/fetchFilms';\nimport SerchBar from 'components/SerchBar/SerchBar';\nimport MoviesList from 'components/Movies/MoviesList';\n\nconst Movies = () => {\n  const [filmsByQ, setFilmsByQ] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filmName = searchParams.get('name') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!filmName) {\n      return;\n    }\n\n    async function fetchFilms() {\n      try {\n        const films = await fetchFilmsByQuery(filmName);\n\n        if (films.results.length < 1) {\n          return alert('No Films on your query');\n        }\n\n        setFilmsByQ(films.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchFilms();\n  }, [filmName]);\n\n  const visibleMovies = useMemo(() => {\n    return filmsByQ.filter(film => film.title.toLowerCase().includes(filmName));\n  }, [filmsByQ, filmName]);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const normilizedValue = form.elements.filmInput.value.toLowerCase();\n\n    if (normilizedValue.trim() === '') {\n      return alert('Please, enter film name.');\n    }\n\n    const searchName =\n      normilizedValue !== '' ? { name: normilizedValue.trim() } : {};\n\n    setSearchParams(searchName);\n  };\n\n  return (\n    <main>\n      <SerchBar onSubmit={handleFormSubmit} />\n\n      {visibleMovies && (\n        <MoviesList visibleMovies={visibleMovies} state={{ from: location }} />\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledDiv = styled.div`\n  padding: 16px;\n  display: flex;\n  gap: 10px;\n  box-shadow: 0px 4px 10px 4px #9e9e9e;\n`;\n\nexport const BackLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-around;\n  border: 1px solid blue;\n  border-color: #1a7ac8;\n  border-radius: 5px;\n  width: 100px;\n  height: 40px;\n  color: #1a7ac8;\n\n  &:hover {\n    color: #fff;\n    background-color: #058bf8;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  color: #1a7ac8;\n\n  &:hover {\n    color: #fff;\n    background-color: #058bf8;\n  }\n`;\n"],"names":["axios","KEY","fetchPopFilms","page","url","data","fetchFilmsById","movieId","fetchFilmsByQuery","query","fetchFilmsCredits","fetchFilmsReviews","StyledButton","styled","StyledInput","StyledForm","onSubmit","type","name","autoComplete","autoFocus","placeholder","size","visibleMovies","location","useLocation","map","id","title","to","state","from","useState","filmsByQ","setFilmsByQ","useSearchParams","searchParams","setSearchParams","filmName","get","useEffect","films","results","length","alert","console","log","fetchFilms","useMemo","filter","film","toLowerCase","includes","event","preventDefault","normilizedValue","currentTarget","elements","filmInput","value","trim","searchName","StyledDiv","BackLink","Link","StyledLink"],"sourceRoot":""}