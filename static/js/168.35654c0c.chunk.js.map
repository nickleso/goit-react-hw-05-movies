{"version":3,"file":"static/js/168.35654c0c.chunk.js","mappings":"8SAEAA,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,kFACCC,EADD,sCACsCH,EADtC,iBACkDE,GADlD,SAGkBH,EAAAA,GAAAA,IAAUI,GAH5B,uBAGGC,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kFACCH,EADD,iBACiBG,EADjB,oBACoCN,GADpC,SAGkBD,EAAAA,GAAAA,IAAUI,GAH5B,uBAGGC,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,kFACCL,EADD,gCACgCH,EADhC,kBAC6CQ,GAD7C,SAGkBT,EAAAA,GAAAA,IAAUI,GAH5B,uBAGGC,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,kFACCH,EADD,iBACiBG,EADjB,4BAC4CN,GAD5C,SAGkBD,EAAAA,GAAAA,IAAUI,GAH5B,uBAGGC,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCJ,GAAjC,kFACCH,EADD,iBACiBG,EADjB,4BAC4CN,GAD5C,SAGkBD,EAAAA,GAAAA,IAAUI,GAH5B,uBAGGC,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kE,wGCgBP,UA7CgB,WACd,IAAQO,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE6BN,EAAAA,EAAAA,IAAkBC,GAF/C,OAEUM,EAFV,OAIIF,EAAWE,EAAWC,SAJ1B,gDAMIC,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACV,EAAII,IAEHD,GAKH,2BACGA,EAAQQ,OAAS,IAAK,sEACvB,eACEC,MAAO,CACLC,QAAS,OACTC,IAAK,EACLC,SAAU,OACVC,UAAW,QALf,SAQGb,EAAQQ,OAAS,GAChBR,EAAQc,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,wBAAKD,GAAU,aACf,uBAAIC,GAAW,cAFRnB,EADC,SAfX,IAwBV,C","sources":["MoviesAPI/fetchFilms.js","Pages/Movies/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '3c2d3d1a4a9318a7ef02a0fdedccb03f';\n\nexport async function fetchPopFilms(page) {\n  const url = `/trending/movie/day?api_key=${KEY}&page=${page}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchFilmsById(movieId) {\n  const url = `/movie/${movieId}?api_key=${KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchFilmsByQuery(query) {\n  const url = `/search/movie?api_key=${KEY}&query=${query}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchFilmsCredits(movieId) {\n  const url = `/movie/${movieId}/credits?api_key=${KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchFilmsReviews(movieId) {\n  const url = `/movie/${movieId}/reviews?api_key=${KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchFilmsReviews } from 'MoviesAPI/fetchFilms';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    async function searchFilmsById() {\n      try {\n        const filmReview = await fetchFilmsReviews(id);\n\n        setReviews(filmReview.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    searchFilmsById();\n  }, [id, setReviews]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <div>\n      {reviews.length < 1 && <p>We don't have any reviews for this movie.</p>}\n      <ul\n        style={{\n          display: 'flex',\n          gap: 6,\n          flexWrap: 'wrap',\n          listStyle: 'none',\n        }}\n      >\n        {reviews.length > 0 &&\n          reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{author || 'no info'}</h3>\n              <p>{content || 'no info'}</p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","KEY","fetchPopFilms","page","url","data","fetchFilmsById","movieId","fetchFilmsByQuery","query","fetchFilmsCredits","fetchFilmsReviews","id","useParams","useState","reviews","setReviews","useEffect","filmReview","results","console","log","searchFilmsById","length","style","display","gap","flexWrap","listStyle","map","author","content"],"sourceRoot":""}