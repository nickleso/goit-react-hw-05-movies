{"version":3,"file":"static/js/300.ad8a513f.chunk.js","mappings":"6LAAO,IAAMA,EAAM,mCAENC,EAAW,8B,8JCAXC,EAAeC,EAAAA,GAAAA,OAAH,sTAiBZC,EAAcD,EAAAA,GAAAA,MAAH,kNAcXE,EAAaF,EAAAA,GAAAA,KAAH,gF,kBCavB,EA1CiB,SAAC,GAAkB,IAAD,EAAfG,EAAe,EAAfA,SAClB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAI,UAAGF,EAAaG,IAAI,eAApB,QAA+B,GAqBzC,OACE,UAACN,EAAD,CAAYC,SAXO,SAAAM,GAGnB,GAFAA,EAAMC,iBAEc,KAAhBH,EAAKI,OACP,OAAOC,MAAM,4BAGfT,EAASI,EACV,EAGC,WACE,SAACN,EAAD,CACEY,KAAK,OACLN,KAAK,OACLO,MAAOP,EACPQ,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,SA5BmB,SAAAT,GACvB,IAAMU,EAAuBV,EAAMW,OAAON,MAAMO,cAKhDf,EAF2B,KAAzBa,EAA8B,CAAEZ,KAAMY,GAAyB,CAAC,EAGnE,KAuBG,UAACpB,EAAD,CAAcc,KAAK,SAAnB,WACE,SAAC,MAAD,CAAeS,KAAM,KADvB,cAML,E,iBCzCcC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,kFACQC,EADR,UACiB3B,EAAAA,EADjB,iCACkDD,EAAAA,EADlD,kBAC+D2B,GAD/D,SAKyBE,EAAAA,GAAAA,IAAUD,GALnC,uBAKUE,EALV,EAKUA,KALV,kBAMSA,GANT,kEASA,M,SATiC,GAAlBJ,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,ECmBf,EApBmB,SAAC,GAA8B,IAA5BK,EAA2B,EAA3BA,cAAeC,EAAY,EAAZA,MACnC,OACE,wBACGD,EAAcE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOzB,EAAd,EAAcA,KAAd,OACjB,yBACE,SAAC,KAAD,CACE0B,GAAE,UAAKF,GACPF,MAAOA,EACPK,MAAO,CACLC,MAAO,WAJX,SAOGH,GAASzB,KARLwB,EADQ,KAexB,ECqCD,EAnDe,WACb,OAAgCK,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,6GAEwBpB,EAAkBc,GAF1C,aAEUO,EAFV,QAIcC,QAAQC,OAAS,GAJ/B,yCAKalC,MAAM,2BALnB,OAQI4B,EAAYI,EAAMC,SARtB,gDAUIE,QAAQC,IAAR,MAVJ,0DALc,sBACTX,GADS,mCAmBdY,EACD,GAAE,CAACZ,IAEJ,IAAMT,GAAgBsB,EAAAA,EAAAA,UAAQ,WAC5B,OAAOX,EAASY,QAAO,SAAAC,GAAI,OAAIA,EAAKpB,MAAMX,cAAcgC,SAAShB,EAAtC,GAC5B,GAAE,CAACE,EAAUF,IAWd,OACE,6BACE,SAAC,EAAD,CAAUlC,SAXW,SAAAmD,GACnBA,IAAejB,IAInBC,EAAYgB,GACZd,EAAY,IACb,IAMIZ,EAAckB,OAAS,IACtB,SAAC,EAAD,CAAYlB,cAAeA,EAAeC,MAAO,CAAE0B,KAAMd,OAIhE,C","sources":["MoviesAPI/key-url.js","components/SerchBar/SerchBar.styled.jsx","components/SerchBar/SerchBar.jsx","MoviesAPI/fetchFilmsByQuery.js","components/Movies/MoviesList.jsx","Pages/Movies/Movies.jsx"],"sourcesContent":["export const KEY = '3c2d3d1a4a9318a7ef02a0fdedccb03f';\n\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-around;\n  border: 1px solid blue;\n  border-color: #1a7ac8;\n  border-radius: 5px;\n  width: 100px;\n  height: 40px;\n  color: #1a7ac8;\n\n  &:hover {\n    background-color: #f1f4f7;\n    cursor: pointer;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  border: 1px solid #1a7ac8;\n  border-color: #1a7ac8;\n  border-radius: 5px;\n  width: 200px;\n  height: 36px;\n\n  color: #1a7ac8;\n\n  &:hover {\n    background-color: #f1f4f7;\n  }\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 40px;\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { StyledButton, StyledForm, StyledInput } from './SerchBar.styled';\nimport { MdSavedSearch } from 'react-icons/md';\n\nconst SerchBar = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const name = searchParams.get('name') ?? '';\n\n  const handleFilmChange = event => {\n    const normilizedEventValue = event.target.value.toLowerCase();\n\n    const nextName =\n      normilizedEventValue !== '' ? { name: normilizedEventValue } : {};\n\n    setSearchParams(nextName);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (name.trim() === '') {\n      return alert('Please, enter film name.');\n    }\n\n    onSubmit(name);\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledInput\n        type=\"text\"\n        name=\"film\"\n        value={name}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search films\"\n        onChange={handleFilmChange}\n      />\n      <StyledButton type=\"submit\">\n        <MdSavedSearch size={20} />\n        Search\n      </StyledButton>\n    </StyledForm>\n  );\n};\n\nexport default SerchBar;\n","import axios from 'axios';\nimport { KEY, BASE_URL } from './key-url';\n\nasync function fetchFilmsByQuery(query) {\n  const url = `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`;\n\n  // &page=${page}\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport default fetchFilmsByQuery;\n","import { Link } from 'react-router-dom';\n\nconst MoviesList = ({ visibleMovies, state }) => {\n  return (\n    <ul>\n      {visibleMovies.map(({ id, title, name }) => (\n        <li key={id}>\n          <Link\n            to={`${id}`}\n            state={state}\n            style={{\n              color: '#058bf8',\n            }}\n          >\n            {title || name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import { useState, useEffect, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SerchBar from 'components/SerchBar/SerchBar';\nimport fetchFilmsByQuery from 'MoviesAPI/fetchFilmsByQuery';\nimport MoviesList from 'components/Movies/MoviesList';\n\nconst Movies = () => {\n  const [filmName, setFilmName] = useState('');\n  const [filmsByQ, setFilmsByQ] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!filmName) {\n      return;\n    }\n\n    async function fetchFilms() {\n      try {\n        const films = await fetchFilmsByQuery(filmName);\n\n        if (films.results.length < 1) {\n          return alert('No Films on your query');\n        }\n\n        setFilmsByQ(films.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchFilms();\n  }, [filmName]);\n\n  const visibleMovies = useMemo(() => {\n    return filmsByQ.filter(film => film.title.toLowerCase().includes(filmName));\n  }, [filmsByQ, filmName]);\n\n  const handleFormSubmit = searchFilm => {\n    if (searchFilm === filmName) {\n      return;\n    }\n\n    setFilmName(searchFilm);\n    setFilmsByQ([]);\n  };\n\n  return (\n    <main>\n      <SerchBar onSubmit={handleFormSubmit} />\n\n      {visibleMovies.length > 0 && (\n        <MoviesList visibleMovies={visibleMovies} state={{ from: location }} />\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","BASE_URL","StyledButton","styled","StyledInput","StyledForm","onSubmit","useSearchParams","searchParams","setSearchParams","name","get","event","preventDefault","trim","alert","type","value","autoComplete","autoFocus","placeholder","onChange","normilizedEventValue","target","toLowerCase","size","fetchFilmsByQuery","query","url","axios","data","visibleMovies","state","map","id","title","to","style","color","useState","filmName","setFilmName","filmsByQ","setFilmsByQ","location","useLocation","useEffect","films","results","length","console","log","fetchFilms","useMemo","filter","film","includes","searchFilm","from"],"sourceRoot":""}