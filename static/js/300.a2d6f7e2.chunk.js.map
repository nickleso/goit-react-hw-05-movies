{"version":3,"file":"static/js/300.a2d6f7e2.chunk.js","mappings":"6LAAO,IAAMA,EAAM,mCAENC,EAAW,8B,8JCAXC,EAAeC,EAAAA,GAAAA,OAAH,wUAkBZC,EAAcD,EAAAA,GAAAA,MAAH,kNAcXE,EAAaF,EAAAA,GAAAA,KAAH,gF,kBCbvB,EAlBiB,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SAClB,OACE,UAACD,EAAD,CAAYC,SAAUA,EAAtB,WACE,SAACF,EAAD,CACEG,KAAK,OACLC,KAAK,YACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kBAEd,UAACT,EAAD,CAAcK,KAAK,SAAnB,WACE,SAAC,MAAD,CAAeK,KAAM,KADvB,cAML,E,iBChBcC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,kFACQC,EADR,UACiBd,EAAAA,EADjB,iCACkDD,EAAAA,EADlD,kBAC+Dc,GAD/D,SAKyBE,EAAAA,GAAAA,IAAUD,GALnC,uBAKUE,EALV,EAKUA,KALV,kBAMSA,GANT,kEASA,M,SATiC,GAAlBJ,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,SCaf,EAdmB,SAAC,GAA8B,IAA5BK,EAA2B,EAA3BA,cAAeC,EAAY,EAAZA,MACnC,OACE,wBACGD,EAAcE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOd,EAAd,EAAcA,KAAd,OACjB,yBACE,SAAC,KAAD,CAAYe,GAAE,UAAKF,GAAMF,MAAOA,EAAhC,SACGG,GAASd,KAFLa,EADQ,KASxB,ECmDD,EA3De,WAAO,IAAD,EACnB,GAAgCG,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQ,UAAGF,EAAaG,IAAI,eAApB,QAA+B,GACvCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,6GAEwBrB,EAAkBiB,GAF1C,aAEUK,EAFV,QAIcC,QAAQC,OAAS,GAJ/B,yCAKaC,MAAM,2BALnB,OAQIZ,EAAYS,EAAMC,SARtB,gDAUIG,QAAQC,IAAR,MAVJ,0DALc,sBACTV,GADS,mCAmBdW,EACD,GAAE,CAACX,IAEJ,IAAMZ,GAAgBwB,EAAAA,EAAAA,UAAQ,WAC5B,OAAOjB,EAASkB,QAAO,SAAAC,GAAI,OAAIA,EAAKtB,MAAMuB,cAAcC,SAAShB,EAAtC,GAC5B,GAAE,CAACL,EAAUK,IAkBd,OACE,6BACE,SAAC,EAAD,CAAUxB,SAlBW,SAAAyC,GACvBA,EAAMC,iBAEN,IACMC,EADOF,EAAMG,cACUC,SAASC,UAAUC,MAAMR,cAEtD,GAA+B,KAA3BI,EAAgBK,OAClB,OAAOhB,MAAM,4BAGf,IAAMiB,EACgB,KAApBN,EAAyB,CAAEzC,KAAMyC,EAAgBK,QAAW,CAAC,EAE/DzB,EAAgB0B,EACjB,IAMIrC,IACC,SAAC,EAAD,CAAYA,cAAeA,EAAeC,MAAO,CAAEqC,KAAMxB,OAIhE,C,4IC5DYyB,EAAYtD,EAAAA,GAAAA,IAAH,mHAOTuD,GAAWvD,EAAAA,EAAAA,IAAOwD,EAAAA,GAAPxD,CAAH,kTAiBRyD,GAAazD,EAAAA,EAAAA,IAAOwD,EAAAA,GAAPxD,CAAH,gH","sources":["MoviesAPI/key-url.js","components/SerchBar/SerchBar.styled.jsx","components/SerchBar/SerchBar.jsx","MoviesAPI/fetchFilmsByQuery.js","components/Movies/MoviesList.jsx","Pages/Movies/Movies.jsx","components/Movies/Movies.styled.jsx"],"sourcesContent":["export const KEY = '3c2d3d1a4a9318a7ef02a0fdedccb03f';\n\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-around;\n  border: 1px solid blue;\n  border-color: #1a7ac8;\n  border-radius: 5px;\n  width: 100px;\n  height: 40px;\n  color: #1a7ac8;\n\n  &:hover {\n    color: #fff;\n    background-color: #058bf8;\n    cursor: pointer;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  border: 1px solid #1a7ac8;\n  border-color: #1a7ac8;\n  border-radius: 5px;\n  width: 200px;\n  height: 36px;\n\n  color: #1a7ac8;\n\n  &:hover {\n    background-color: #f1f4f7;\n  }\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 40px;\n`;\n","import { StyledButton, StyledForm, StyledInput } from './SerchBar.styled';\nimport { MdSavedSearch } from 'react-icons/md';\n\nconst SerchBar = ({ onSubmit }) => {\n  return (\n    <StyledForm onSubmit={onSubmit}>\n      <StyledInput\n        type=\"text\"\n        name=\"filmInput\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search films\"\n      />\n      <StyledButton type=\"submit\">\n        <MdSavedSearch size={20} />\n        Search\n      </StyledButton>\n    </StyledForm>\n  );\n};\n\nexport default SerchBar;\n","import axios from 'axios';\nimport { KEY, BASE_URL } from './key-url';\n\nasync function fetchFilmsByQuery(query) {\n  const url = `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`;\n\n  // &page=${page}\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport default fetchFilmsByQuery;\n","import { StyledLink } from './Movies.styled';\n\nconst MoviesList = ({ visibleMovies, state }) => {\n  return (\n    <ul>\n      {visibleMovies.map(({ id, title, name }) => (\n        <li key={id}>\n          <StyledLink to={`${id}`} state={state}>\n            {title || name}\n          </StyledLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import { useState, useEffect, useMemo } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport SerchBar from 'components/SerchBar/SerchBar';\nimport fetchFilmsByQuery from 'MoviesAPI/fetchFilmsByQuery';\nimport MoviesList from 'components/Movies/MoviesList';\n\nconst Movies = () => {\n  const [filmsByQ, setFilmsByQ] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filmName = searchParams.get('name') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!filmName) {\n      return;\n    }\n\n    async function fetchFilms() {\n      try {\n        const films = await fetchFilmsByQuery(filmName);\n\n        if (films.results.length < 1) {\n          return alert('No Films on your query');\n        }\n\n        setFilmsByQ(films.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchFilms();\n  }, [filmName]);\n\n  const visibleMovies = useMemo(() => {\n    return filmsByQ.filter(film => film.title.toLowerCase().includes(filmName));\n  }, [filmsByQ, filmName]);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const normilizedValue = form.elements.filmInput.value.toLowerCase();\n\n    if (normilizedValue.trim() === '') {\n      return alert('Please, enter film name.');\n    }\n\n    const searchName =\n      normilizedValue !== '' ? { name: normilizedValue.trim() } : {};\n\n    setSearchParams(searchName);\n  };\n\n  return (\n    <main>\n      <SerchBar onSubmit={handleFormSubmit} />\n\n      {visibleMovies && (\n        <MoviesList visibleMovies={visibleMovies} state={{ from: location }} />\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledDiv = styled.div`\n  padding: 16px;\n  display: flex;\n  gap: 10px;\n  box-shadow: 0px 4px 10px 4px #9e9e9e;\n`;\n\nexport const BackLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-around;\n  border: 1px solid blue;\n  border-color: #1a7ac8;\n  border-radius: 5px;\n  width: 100px;\n  height: 40px;\n  color: #1a7ac8;\n\n  &:hover {\n    color: #fff;\n    background-color: #058bf8;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  color: #1a7ac8;\n\n  &:hover {\n    color: #fff;\n    background-color: #058bf8;\n  }\n`;\n"],"names":["KEY","BASE_URL","StyledButton","styled","StyledInput","StyledForm","onSubmit","type","name","autoComplete","autoFocus","placeholder","size","fetchFilmsByQuery","query","url","axios","data","visibleMovies","state","map","id","title","to","useState","filmsByQ","setFilmsByQ","useSearchParams","searchParams","setSearchParams","filmName","get","location","useLocation","useEffect","films","results","length","alert","console","log","fetchFilms","useMemo","filter","film","toLowerCase","includes","event","preventDefault","normilizedValue","currentTarget","elements","filmInput","value","trim","searchName","from","StyledDiv","BackLink","Link","StyledLink"],"sourceRoot":""}