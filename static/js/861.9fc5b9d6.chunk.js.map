{"version":3,"file":"static/js/861.9fc5b9d6.chunk.js","mappings":"8SAEAA,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,kFACCC,EADD,sCACsCH,EADtC,iBACkDE,GADlD,SAGkBH,EAAAA,GAAAA,IAAUI,GAH5B,uBAGGC,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kFACCH,EADD,iBACiBG,EADjB,oBACoCN,GADpC,SAGkBD,EAAAA,GAAAA,IAAUI,GAH5B,uBAGGC,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,kFACCL,EADD,gCACgCH,EADhC,kBAC6CQ,GAD7C,SAGkBT,EAAAA,GAAAA,IAAUI,GAH5B,uBAGGC,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,kFACCH,EADD,iBACiBG,EADjB,4BAC4CN,GAD5C,SAGkBD,EAAAA,GAAAA,IAAUI,GAH5B,uBAGGC,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCJ,GAAjC,kFACCH,EADD,iBACiBG,EADjB,4BAC4CN,GAD5C,SAGkBD,EAAAA,GAAAA,IAAUI,GAH5B,uBAGGC,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kE,yGC6BP,UAxDa,WACX,IAAQO,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BP,EAAAA,EAAAA,IAAkBE,GAF7C,OAEUM,EAFV,OAIIF,EAAQE,EAASH,MAJrB,gDAMII,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACT,KAGF,2BACGG,EAAKO,OAAS,IAAK,yEAEnBP,EAAKO,OAAS,IACb,eACEC,MAAO,CACLC,QAAS,OACTC,IAAK,EACLC,SAAU,OACVC,UAAW,QALf,SAQGZ,EAAKa,KAAI,gBAAGhB,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,KAAMC,EAA5B,EAA4BA,aAA5B,OACR,gBAEER,MAAO,CACLS,MAAO,KAHX,WAME,gBACEA,MAAM,QACNC,IACEF,EA3CM,kCA4CgBA,EAClB,0DAENG,IAAKJ,GAAQD,GAAiB,aAEhC,wBAAKC,GAAQD,GAAiB,cAdzBjB,EAFC,QAuBnB,C","sources":["MoviesAPI/fetchFilms.js","Pages/Movies/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '3c2d3d1a4a9318a7ef02a0fdedccb03f';\n\nexport async function fetchPopFilms(page) {\n  const url = `/trending/movie/day?api_key=${KEY}&page=${page}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchFilmsById(movieId) {\n  const url = `/movie/${movieId}?api_key=${KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchFilmsByQuery(query) {\n  const url = `/search/movie?api_key=${KEY}&query=${query}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchFilmsCredits(movieId) {\n  const url = `/movie/${movieId}/credits?api_key=${KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function fetchFilmsReviews(movieId) {\n  const url = `/movie/${movieId}/reviews?api_key=${KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchFilmsCredits } from 'MoviesAPI/fetchFilms';\n\nconst BASE_IMAGES_URL = 'https://image.tmdb.org/t/p/w400';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    async function searchFilmsById() {\n      try {\n        const filmCast = await fetchFilmsCredits(id);\n\n        setCast(filmCast.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    searchFilmsById();\n  }, [id]);\n\n  return (\n    <div>\n      {cast.length < 1 && <p>No information about the cast for this movie.</p>}\n\n      {cast.length > 0 && (\n        <ul\n          style={{\n            display: 'flex',\n            gap: 6,\n            flexWrap: 'wrap',\n            listStyle: 'none',\n          }}\n        >\n          {cast.map(({ id, original_name, name, profile_path }) => (\n            <li\n              key={id}\n              style={{\n                width: 150,\n              }}\n            >\n              <img\n                width=\"150px\"\n                src={\n                  profile_path\n                    ? BASE_IMAGES_URL + profile_path\n                    : 'https://dummyimage.com/200x300/bab8ba/000&text=no+photo'\n                }\n                alt={name || original_name || 'no info'}\n              />\n              <h4>{name || original_name || 'no info'}</h4>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","KEY","fetchPopFilms","page","url","data","fetchFilmsById","movieId","fetchFilmsByQuery","query","fetchFilmsCredits","fetchFilmsReviews","id","useParams","useState","cast","setCast","useEffect","filmCast","console","log","searchFilmsById","length","style","display","gap","flexWrap","listStyle","map","original_name","name","profile_path","width","src","alt"],"sourceRoot":""}