{"version":3,"file":"static/js/471.261da088.chunk.js","mappings":"6LAAO,IAAMA,EAAM,mCAENC,EAAW,8B,8ICCTC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,kFACQC,EADR,UACiBH,EAAAA,EADjB,kBACmCE,EADnC,4BAC8DH,EAAAA,GAD9D,SAGyBK,EAAAA,GAAAA,IAAUD,GAHnC,uBAGUE,EAHV,EAGUA,KAHV,kBAISA,GAJT,kEAOA,M,SAPiC,GAAlBJ,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,SC8Cf,EA7CgB,WACd,IAAQK,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAE6BV,EAAkBK,GAF/C,OAEUM,EAFV,OAIIF,EAAWE,EAAWC,SAJ1B,gDAMIC,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACV,EAAII,IAEHD,GAKH,2BACGA,EAAQQ,OAAS,IAAK,sEACvB,eACEC,MAAO,CACLC,QAAS,OACTC,IAAK,EACLC,SAAU,OACVC,UAAW,QALf,SAQGb,EAAQQ,OAAS,GAChBR,EAAQc,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,wBAAKD,GAAU,aACf,uBAAIC,GAAW,cAFRnB,EADC,SAfX,IAwBV,C","sources":["MoviesAPI/key-url.js","MoviesAPI/fetchFilmsReviews.js","Pages/Movies/Reviews.jsx"],"sourcesContent":["export const KEY = '3c2d3d1a4a9318a7ef02a0fdedccb03f';\n\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { KEY, BASE_URL } from './key-url';\n\nasync function fetchFilmsReviews(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport default fetchFilmsReviews;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchFilmsReviews from 'MoviesAPI/fetchFilmsReviews';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    async function searchFilmsById() {\n      try {\n        const filmReview = await fetchFilmsReviews(id);\n\n        setReviews(filmReview.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    searchFilmsById();\n  }, [id, setReviews]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <div>\n      {reviews.length < 1 && <p>We don't have any reviews for this movie.</p>}\n      <ul\n        style={{\n          display: 'flex',\n          gap: 6,\n          flexWrap: 'wrap',\n          listStyle: 'none',\n        }}\n      >\n        {reviews.length > 0 &&\n          reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{author || 'no info'}</h3>\n              <p>{content || 'no info'}</p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["KEY","BASE_URL","fetchFilmsReviews","movieId","url","axios","data","id","useParams","useState","reviews","setReviews","useEffect","filmReview","results","console","log","searchFilmsById","length","style","display","gap","flexWrap","listStyle","map","author","content"],"sourceRoot":""}